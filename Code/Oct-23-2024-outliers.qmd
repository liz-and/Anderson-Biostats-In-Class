---
title: "23 Oct 2024"
format: html
editor: visual
---

## Identifying outliers

### What are outliers?

Outliers are values in the data that fall outside of the regular variation in the dataset. Think of them as extreme low or high values.

Outliers can be true - that is - not mistakes and in that case represent natural variation in the data. Generally, true outliers should be retained in the data for further analysis.

Sometimes, however, outliers represent mistakes in the data. These mistakes have many sources:

-   Measurement errors

-   Data entry errors

-   Biased sampling of the data

-   and other causes

### Why do we care about outliers?

When we include false outliers in our analysis, they can distort our understanding of our data and can distort our statistical test results. They can also reduce the *power* of our statistical test to find true differences in groups of data.

### How do we detect outliers?

There are several ways to identify outliers in the data. These methods include:

1.  Arranging the data from low to high and scanning for outliers
2.  Visualizing the data with a boxplot to see the data distribution at a glance
3.  Using the interquartile range
4.  Using a statistical method involving z-scores.

We will look at the first 3 methods today. But first let's set things up and read in some data.

```{r}
rm(list = ls())
library(tidyverse)
library(here)
squirrels <-read.csv(here("Data", "squirrel_measurements.csv"))
```

### Arranging the data to look for outliers

Start by arranging the data in order by one of the variables of interest.

Let's look at body mass first

```{r}
squirrels %>% arrange(body_mass_g) %>% View()
```

Do you see an outliers? We can also use `head` and `tail` to look at the top and bottom observations

```{r}
squirrels %>% arrange(body_mass_g) %>% head(10) %>% View()
squirrels %>% arrange(body_mass_g) %>% tail(10) %>% View() 
#Flag the bottom data point as a possible outlier
```

Now examine total_length_mm

```{r}
squirrels %>% arrange(total_length_mm) %>% View()
```

```{r}

squirrels %>% arrange(total_length_mm) %>% head(10) %>% View() 

squirrels %>% arrange(total_length_mm) %>% tail(10) %>% View()
#again flag the bottom data point
```

### Visualize the data to look for outliers

Try body mass first

```{r}
#Use a histogram
squirrels |>
  ggplot(aes(x = body_mass_g))+
  geom_histogram()
```

I think value \_\_\_ is an outlier. I am going to ignore that fact and include it because \_\_\_\_

```{r}
squirrels %>% 
  ggplot(aes(age, body_mass_g))+
  geom_boxplot(outlier.color = "red")+
  facet_wrap(~sex)

#Note that when we just looked at data we only flagged one, but here it's showing 3
```

Now look at total length

```{r}
squirrels %>% 
  ggplot(aes(age, total_length_mm))+
  geom_boxplot(outlier.color = "red")+
  facet_wrap(~sex)
```

### Interquartile range method

The boxplot generated by ggplot2 also shows the interquartile range method. The ends of the "whiskers" are 1.5\*IQR (where IQR = distance between the first and 3rd quartiles) above and below the hinge (1st and 3rd quartile lines). Points beyond the whiskers are considered outliers by this method.

(Same as boxplot method in R)

## Pick one outlier and change it to NA

```{r}
squirrels |>
  ggplot(aes(x = body_mass_g))+
  geom_histogram()


fix_na <- which(squirrels, body_mass_g > 1500)
```
