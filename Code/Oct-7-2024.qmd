---
title: "Oct 7 2024 Class and Exercise 4"
format: html
editor: visual
---

```{r}
#Set up
rm(list=ls())
library(here)
library(tidyverse)
```

```{r}
tomatoes <- read.csv(here("Data", "tomato_data.csv")) #read in the data
```

```{r}
glimpse(tomatoes) #look at the dataset
```

Assign data types â€“\> Change the columns to factor data type (nominal)

```{r}
tomatoes$Plant_number <- as.factor(tomatoes$Plant_number)

tomatoes$Treatment <- as.factor(tomatoes$Treatment)
```

```{r}
levels(tomatoes$Treatment) #notice no data validation, need to fix factor levels
```

```{r}
fix <- which(tomatoes$Treatment == "control")
tomatoes$Treatment[fix] <- "Control"
```

```{r}
fix2 <- which(tomatoes$Treatment == "fertilizer")
tomatoes$Treatment[fix2] <- "Fertilizer"

levels(tomatoes$Treatment) #still shows all original levels so now need to say...

tomatoes$Treatment <- factor(tomatoes$Treatment) #then read the above line of code again to get the updated levels
```

## Now look at summary function

```{r}
test <- c(2, 4, 6, 8, 10, 12, 14, 16, 18, 20)
summary(test)
```

Looking at summary some more

```{r}
grades <- c(90, 94, 96, 90, 84, 86)
summary(grades)
```

Now a different way

```{r}
quantile(grades, probs = c(0, 0.25, 0.5, 0.75, 1))
```

# Exercise 4 (done outside of class)

Practicing with dplyr

Line of code to get just the column with number of flowers

```{r}
select(tomatoes, Num_flowers) 
```

Return the 3rd through 8th rows of data

```{r}
slice(tomatoes, 3:8)
```

Return only the data from the control treatment in the experiment

```{r}
filter(tomatoes, Treatment == "Control") 

#Use logical operator!
```

Return plants from the fertilized treatment that had at least 27 flowers

```{r}
tomatoes %>% #in the tomatoes data frame
  filter(Num_flowers > 27) %>% #filter to only show rows with over 27 flowers
  filter(Treatment == "Fertilizer") #filter to only those in the Fertilizer treatment
```

Determine the mean number of flowers in the control treatment plants

```{r}
tomatoes %>%
  filter(Treatment == "Control") %>%
  mean(Num_flowers)
## ^^^ Wrong, Does not work ^^^


# Use group_by
tomatoes %>%
  group_by(Treatment) %>%
  summarise(meanNumFlowers = mean(Num_flowers))
# not sure how to get it to just be Control treatment
```

Determine the mean weight of tomatoes from the fertilizer treatment plants

```{r}
tomatoes %>%
  group_by(Treatment) %>%
  summarise(meanWeight = mean(Avg_tomato_weight_g)) 
#answer was 147

tomatoes %>%
  group_by(Treatment = "Fertilizer") %>%
  summarise(meanWeight = mean(Avg_tomato_weight_g))
#answer was 144.4, but got only the fertilizer column returned...

#Why am I getting different answers?
```

Use piping to:

Create a new variable called with only one column of plant numbers from plants that produced fruit with a mean weight of 150g or more

```{r}
big_toms <- tomatoes |>
  filter(Avg_tomato_weight_g >= 150) |>
  select(Plant_number)

#create object big_toms <- from tomatoes df AND THEN filter by average tomato weight the rows that are greater than or equal to 150 AND THEN select the row Plant number as the output
```

Determine mean number of flowers produced in the control and treatment groups (with group_by and summarize)

```{r}
tomatoes|>
  group_by(Treatment) |>
  summarise(meanNumFlowers = mean(Num_flowers))

#From the tomato dataframe AND THEN group data based on categorical variable Treatment (Control and Fertilizer). AND THEN use summarize to 
```

Determine the mean and standard deviation in mean fruit size between control and fertilized plants and save the result in a dataframe called TomatoSizes (use group_by and summarise)

```{r}
TomatoSize <- tomatoes |>
  group_by(Treatment) |>
  summarise(meanFruitSize = mean(Avg_tomato_weight_g))


TomatoSizeSD <- tomatoes |>
  group_by(Treatment) |>
  summarise(sdFruitSize = sd(Avg_tomato_weight_g))

#Was able to do these separately but didn't work when together...(see below)
```

```{r}
TomatoSize <- tomatoes |>
  group_by(Treatment) |>
  summarise(meanFruitSize = mean(Avg_tomato_weight_g)) |>
  summarise(sdFruitSize = sd(Avg_tomato_weight_g))

#This doesn't work, not sure why... returns error saying that the Avg_tomato_weight_g doesn't exist...
```
